# =============================================================================
# PRODUCTION ENVIRONMENT OVERRIDES
# =============================================================================
# This file contains production-specific overrides for the microservices application.
# Production environment provides maximum security, reliability, and performance.

# Global overrides
global:
  environment: "production"

# AWS IAM Authenticator - Full production configuration
awsIamAuthenticator:
  enabled: true
  deployment:
    replicaCount: 3  # High availability for production
    resources:
      requests:
        cpu: "100m"
        memory: "128Mi"
      limits:
        cpu: "200m"
        memory: "256Mi"
  monitoring:
    enabled: true  # Full monitoring in production
  security:
    networkPolicies:
      enabled: true  # Strict network policies for production
    podSecurityStandards:
      enabled: true
      level: "restricted"

# Kubectl-cost - Full cost monitoring for production
kubectlCost:
  enabled: true
  deployment:
    replicaCount: 2  # High availability for production
    resources:
      requests:
        cpu: "100m"
        memory: "128Mi"
      limits:
        cpu: "200m"
        memory: "256Mi"
  reporting:
    alerts:
      thresholds:
        dailySpend: 100  # Production thresholds
        weeklySpend: 500
        monthlySpend: 2000
      notifications:
        email:
          enabled: true
          recipients: ["admin@yourdomain.com", "finance@yourdomain.com"]
        slack:
          enabled: true
          webhook: "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"
  optimization:
    recommendations:
      resources:
        cpu:
          minUtilization: 50  # Production thresholds
          maxUtilization: 80
        memory:
          minUtilization: 50
          maxUtilization: 80

# Web tier overrides
webTier:
  replicaCount: 5
  resources:
    requests:
      cpu: "200m"
      memory: "256Mi"
    limits:
      cpu: "1000m"
      memory: "1Gi"
  ingress:
    enabled: true
    hosts:
    - host: "app.yourdomain.com"
      paths:
      - path: "/"
        pathType: "Prefix"
  autoscaling:
    enabled: true
    minReplicas: 5
    maxReplicas: 20
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

# Application tier overrides
appTier:
  replicaCount: 5
  resources:
    requests:
      cpu: "300m"
      memory: "512Mi"
    limits:
      cpu: "1500m"
      memory: "2Gi"
  autoscaling:
    enabled: true
    minReplicas: 5
    maxReplicas: 20
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

# Data tier overrides
dataTier:
  postgresql:
    replicaCount: 1
    resources:
      requests:
        cpu: "500m"
        memory: "1Gi"
      limits:
        cpu: "2000m"
        memory: "4Gi"
    persistence:
      size: "100Gi"
  
  redis:
    replicaCount: 3
    resources:
      requests:
        cpu: "200m"
        memory: "512Mi"
      limits:
        cpu: "1000m"
        memory: "1Gi"
    persistence:
      size: "20Gi"

# Monitoring overrides
monitoring:
  enabled: true
  prometheus:
    enabled: true
    retention: "30d"
    storage:
      size: "100Gi"
  grafana:
    enabled: true
    persistence:
      size: "20Gi"

# Karpenter overrides
karpenter:
  enabled: true
  nodePools:
  - name: "production"
    spec:
      requirements:
      - key: "node.kubernetes.io/instance-type"
        operator: "In"
        values: [ "m5.large", "m5.xlarge", "m5.2xlarge", "c5.large", "c5.xlarge" ]
      - key: "topology.kubernetes.io/zone"
        operator: "In"
        values: [ "us-west-2a", "us-west-2b", "us-west-2c" ]
      - key: "kubernetes.io/arch"
        operator: "In"
        values: [ "amd64" ]
      - key: "karpenter.sh/capacity-type"
        operator: "In"
        values: [ "on-demand", "spot" ]
      limits:
        cpu: "200"
        memory: "800Gi"
      disruption:
        consolidationPolicy: "WhenEmpty"
        consolidateAfter: "30s"

# Network policies overrides
networkPolicies:
  enabled: true
  defaultDeny:
    enabled: true

# RBAC overrides
rbac:
  enabled: true

# Secrets overrides
secrets:
  enabled: true

# Backup overrides
backup:
  enabled: true
  velero:
    schedule: "0 1 * * *"  # Daily at 1 AM
    retention: "90d"
  database:
    schedule: "0 0 * * *"  # Daily at midnight
    retention: "30d"

# Cost optimization overrides
costOptimization:
  enabled: true
  resourceQuotas:
    enabled: true
    cpu: "50"
    memory: "100Gi"
    persistentVolumeClaims: "20"
    services: "50"
    servicesLoadBalancers: "10"
    servicesNodePorts: "20"
  limitRanges:
    enabled: true
    default:
      cpu: "500m"
      memory: "512Mi"
    defaultRequest:
      cpu: "100m"
      memory: "128Mi"
    max:
      cpu: "8"
      memory: "16Gi"
    min:
      cpu: "50m"
      memory: "64Mi" 