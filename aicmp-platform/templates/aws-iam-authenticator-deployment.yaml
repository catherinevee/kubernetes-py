{{- if .Values.awsIamAuthenticator.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.fullname" . }}-aws-iam-authenticator
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
    app.kubernetes.io/component: "aws-iam-authenticator"
  annotations:
    {{- include "common.annotations" . | nindent 4 }}
spec:
  replicas: {{ .Values.awsIamAuthenticator.deployment.replicaCount }}
  selector:
    matchLabels:
      {{- include "common.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: "aws-iam-authenticator"
  template:
    metadata:
      labels:
        {{- include "common.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: "aws-iam-authenticator"
      annotations:
        {{- include "common.annotations" . | nindent 8 }}
        checksum/config: {{ include (print $.Template.BasePath "/aws-iam-authenticator-configmap.yaml") . | sha256sum }}
    spec:
      {{- if .Values.awsIamAuthenticator.serviceAccount.create }}
      serviceAccountName: {{ .Values.awsIamAuthenticator.serviceAccount.name }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.awsIamAuthenticator.deployment.podSecurityContext | nindent 8 }}
      containers:
      - name: aws-iam-authenticator
        image: "{{ .Values.awsIamAuthenticator.deployment.image.repository }}:{{ .Values.awsIamAuthenticator.deployment.image.tag }}"
        imagePullPolicy: {{ .Values.awsIamAuthenticator.deployment.image.pullPolicy }}
        args:
        - server
        - --config=/etc/aws-iam-authenticator/config.yaml
        - --state-dir=/var/aws-iam-authenticator
        ports:
        - name: http
          containerPort: {{ .Values.awsIamAuthenticator.config.server.port }}
          protocol: TCP
        - name: metrics
          containerPort: 21362
          protocol: TCP
        env:
        - name: AWS_REGION
          value: {{ .Values.global.aws.region }}
        - name: AWS_ACCOUNT_ID
          value: {{ .Values.global.aws.accountId }}
        - name: CLUSTER_ID
          value: {{ .Values.awsIamAuthenticator.config.clusterID }}
        resources:
          {{- toYaml .Values.awsIamAuthenticator.deployment.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.awsIamAuthenticator.deployment.securityContext | nindent 10 }}
        volumeMounts:
        - name: config
          mountPath: /etc/aws-iam-authenticator
          readOnly: true
        - name: state
          mountPath: /var/aws-iam-authenticator
        - name: kubeconfig
          mountPath: /etc/kubernetes/aws-iam-authenticator
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
      - name: config
        configMap:
          name: {{ .Values.awsIamAuthenticator.configMap.name }}
      - name: state
        emptyDir: {}
      - name: kubeconfig
        emptyDir: {}
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.global.imagePullSecrets | nindent 8 }}
      {{- end }}
{{- end }} 